security:
    enable_authenticator_manager: true

    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        App\Entity\User: 'auto'
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/login
            stateless: true
            user_checker: App\Security\UserChecker
            json_login:
                check_path: /login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/
            stateless: true
            jwt: ~

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/doc, roles: PUBLIC_ACCESS, methods: [GET,OPTIONS] }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/login_check, roles: PUBLIC_ACCESS }
        - { path: ^/ics/tournament/[0-9]+, roles: PUBLIC_ACCESS }
        - { path: ^/ics-download/tournament/[0-9]+, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: PUBLIC_ACCESS, methods: [PUT,OPTIONS] }
        - { path: ^/forgot-password$, roles: PUBLIC_ACCESS, methods: [PUT,OPTIONS] }
        - { path: ^/forgot-password/[0-9a-zA-Z]+, roles: PUBLIC_ACCESS, methods: [POST,OPTIONS] }
        - { path: ^/verify/email, role: PUBLIC_ACCESS, methods: [GET,OPTIONS] }
        - { path: ^/cron$, roles: PUBLIC_ACCESS, methods: [GET,OPTIONS], ips: [127.0.0.1, 85.214.228.176] }
        - { path: ^/game, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/game/[0-9]+, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/game/[0-9]+, roles: ROLE_ADMIN, methods: [POST,DELETE,OPTIONS] }
        - { path: ^/game, roles: ROLE_ADMIN, methods: [PUT,OPTIONS] }
        - { path: ^/tournament/[0-9]+/bet, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/tournament/[0-9]+/bet/[0-9]+, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/bet/[0-9]+, roles: ROLE_USER, methods: [POST,OPTIONS] }
        - { path: ^/bet/[0-9]+, roles: ROLE_USER, methods: [DELETE,OPTIONS] }
        - { path: ^/bet, roles: ROLE_USER, methods: [PUT,OPTIONS] }
        - { path: ^/tournament/[0-9]+/finalsBet, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/tournament/active, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/tournament/[0-9]+/finalsBet/[ 0-9 ]+, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/finalsBet/[0-9]+, roles: ROLE_USER, methods: [POST,OPTIONS] }
        - { path: ^/finalsBet/[0-9]+, roles: ROLE_ADMIN, methods: [DELETE,OPTIONS] }
        - { path: ^/finalsBet, roles: ROLE_USER, methods: [PUT,OPTIONS] }
        - { path: ^/team$, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/tournament/[0-9]+/team/[0-9]+, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/team/[0-9]+, roles: ROLE_ADMIN, methods: [POST,DELETE,OPTIONS] }
        - { path: ^/team, roles: ROLE_ADMIN, methods: [PUT,OPTIONS] }
        - { path: ^/tournament/[0-9]+/stage$, roles: ROLE_ADMIN, methods: [GET,OPTIONS] }
        - { path: ^/tournament/[0-9]+/stage/[0-9]+, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/stage/[0-9]+, roles: ROLE_ADMIN, methods: [POST,DELETE,OPTIONS] }
        - { path: ^/stage, roles: ROLE_ADMIN, methods: [PUT,OPTIONS] }
        - { path: ^/tournament, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/tournament/[0-9]+, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/tournament/[0-9]+, roles: ROLE_ADMIN, methods: [POST,DELETE,OPTIONS] }
        - { path: ^/tournament, roles: ROLE_ADMIN, methods: [PUT,OPTIONS] }
        - { path: ^/ranking/tournament/[0-9]+, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/chart/tournament/[0-9]+, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/statistics/tournament/[0-9]+, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/user$, roles: ROLE_ADMIN, methods: [GET,OPTIONS] }
        - { path: ^/user/[0-9]+, roles: ROLE_USER, methods: [GET,OPTIONS] }
        - { path: ^/user, roles: ROLE_USER, methods: [PUT,OPTIONS] }
        - { path: ^/user/[0-9]+/upload, roles: ROLE_USER, methods: [POST,OPTIONS] }
        - { path: ^/user/[0-9]+/toggle, roles: ROLE_ADMIN, methods: [POST,OPTIONS] }
        - { path: ^/media/cache, roles: PUBLIC_ACCESS, methods: [GET,OPTIONS] }
        - { path: ^/, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
